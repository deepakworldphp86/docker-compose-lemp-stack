version: '3'
services:
#  timezone:
#    build: .
#    environment:
#      - TZ=America/New_York
#      - DEBIAN_FRONTEND=noninteractive
  php:
        build:
            context: ./docker/php
            dockerfile: php-alpine.Dockerfile
        container_name: ${APP_NAME:?err}-php
        #network_mode: "host"
        ports:
          - "9000:9000"
        volumes:
            - '../Docker-Projects/mage-ce-edition:/var/www/html'
            - './scripts:/var/www'
            - ./docker/php/config/custom.ini:/usr/local/etc/php/conf.d/custom.ini
  nginx:
    image: nginx:latest
    container_name: ${APP_NAME:?err}-nginx
    ports:
      - '80:80'
      - '443:443'
    links:
      - 'php'
    volumes:
      - '../Docker-Projects/mage-ce-edition:/var/www/html'
      - './config/nginx:/etc/nginx/conf.d'
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1025:1025"
      - "8025:8025"
  mysql:
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER="magento"
      - MYSQL_PASSWORD="magento"
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    image: percona:${MYSQL_VERSION}
    container_name: percona-mysql8
    #command: --skip-grant-tables
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - mysql-log:/var/log/mysql
      - mysql-lib:/var/lib/mysql
      - ./mysql-backup:/home


  redis-obj:
    image: redis:${REDIS_VERSION}
    container_name: redis-obj
    ports:
      - "6379:6379"
    restart: always
  redis-fpc:
    command: redis-server /usr/local/etc/redis/redis.conf
    image: redis:${REDIS_VERSION}
    container_name: redis-fpc
    ports:
      - "6390:6390"
    restart: always
    volumes:
      - ./config/redis/fpc.conf:/usr/local/etc/redis/redis.conf
  redis-ses:
    command: redis-server /usr/local/etc/redis/redis.conf
    image: redis:${REDIS_VERSION}
    container_name: redis-ses
    ports:
      - "6382:6382"
    restart: always
    volumes:
      - ./config/redis/ses.conf:/usr/local/etc/redis/redis.conf
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
  elasticsearch:
    image: elasticsearch:7.6.2
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
volumes:
  mysql-log:
  mysql-lib:

       
